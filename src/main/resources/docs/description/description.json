[
  {
    "patternId": "C0111",
    "title": "Enforce docstring definition",
    "description": "Enforces modules, functions, classes and methods to have a docstring.",
    "timeToFix": 5
  },
  {
    "patternId": "C0112",
    "title": "Prohibit empty docstring",
    "description": "Prohibits modules, functions, classes or methods from having an empty docstring.",
    "timeToFix": 5
  },
  {
    "patternId": "C0204",
    "title": "Enforce 'mcs' as first argument",
    "description": "Enforces the name of the as first argument of a metaclass class method to be 'mcs'.",
    "timeToFix": 5
  },
  {
    "patternId": "C0301",
    "title": "Enforce line max length",
    "description": "Enforces the maximum characters length of each line.",
    "timeToFix": 5,
    "parameters": [
      {
        "name": "max-line-length",
        "description": "Indicate the threshold of characters in a code line"
      }
    ]
  },
  {
    "patternId": "C0303",
    "title": "Prohibit trailing whitespace",
    "description": "Prohibits whitespace on any line directly before the line end character(s).",
    "timeToFix": 5
  },
  {
    "patternId": "C0304",
    "title": "Enforce newline at end of file",
    "description": "Enforces the line end character(s) on the last line of a file.",
    "timeToFix": 5
  },
  {
    "patternId": "C0321",
    "title": "Enforce one statement per line",
    "description": "Enforces the definition of a single statement per line.",
    "timeToFix": 5
  },
  {
    "patternId": "C0325",
    "title": "Prohibit unnecessary parenthesis",
    "description": "Prohibits use of unnecessary parenthesis to enforce Python conventions.",
    "timeToFix": 5
  },
  {
    "patternId": "C1001",
    "title": "Prohibit old-style class",
    "description": "Prohibits old-style class definition.",
    "timeToFix": 5
  },
  {
    "patternId": "E0100",
    "title": "Prohibit __init__() method as a generator",
    "description": "Prohibits special class method __init__() from being turned into a generator by a yield statement in its body.",
    "timeToFix": 5
  },
  {
    "patternId": "E0101",
    "title": "Enforce __init__() method return as None",
    "description": "Prevents the special class method __init__() from having an explicit return value.",
    "timeToFix": 5
  },
  {
    "patternId": "E0102",
    "title": "Prohibit redefinition",
    "description": "Prohibits the redefinition of functions, classes and methods.",
    "timeToFix": 5
  },
  {
    "patternId": "E0103",
    "title": "Prohibit break or continue outside loops",
    "description": "Prohibits the usage of the break or continue keywords outside of a loop.",
    "timeToFix": 15
  },
  {
    "patternId": "E0104",
    "title": "Prohibit return outside functions",
    "description": "Prohibits the usage of the return statement outside functions and methods.",
    "timeToFix": 15
  },
  {
    "patternId": "E0105",
    "title": "Prohibit yield outside functions",
    "description": "Prohibits the usage of the yield statement outside functions and methods.",
    "timeToFix": 15
  },
  {
    "patternId": "E0106",
    "title": "Prohibit return with argument inside generator",
    "description": "Prohibits the usage of the return statement with an argument in a generator function or method.",
    "timeToFix": 10
  },
  {
    "patternId": "E0107",
    "title": "Missing operator",
    "description": "Prohibits the usage of operators that do not exist in Python.",
    "timeToFix": 5
  },
  {
    "patternId": "E0108",
    "title": "Prohibit duplicate argument name",
    "description": "Prohibits the usage of an argument name in more than one function or method definition.",
    "timeToFix": 5
  },
  {
    "patternId": "E0202",
    "title": "Prohibit shadowing attributes",
    "description": "Prohibits a class from defining a method which shadows an instance attribute with the same name.",
    "timeToFix": 5
  },
  {
    "patternId": "E0203",
    "title": "Prohibit access to unassigned members",
    "description": "Prohibits an instance member from being accessed before it's actually assigned.",
    "timeToFix": 5
  },
  {
    "patternId": "E0211",
    "title": "Prohibit methods without arguments",
    "description": "Prohibits a class from defining a method without having at least an argument with the instance object.",
    "timeToFix": 5
  },
  {
    "patternId": "E0213",
    "title": "Enforce 'self' as first argument",
    "description": "Enforces the name of the as first argument of a method to be 'self'.",
    "timeToFix": 5
  },
  {
    "patternId": "E0302",
    "title": "Enforce correct signature of special methods",
    "description": "Enforces that special methods have the expected signature.",
    "timeToFix": 5
  },
  {
    "patternId": "E0601",
    "title": "Prohibit access to unassigned variables",
    "description": "Prohibits a local variable from being accessed before it's actually assigned.",
    "timeToFix": 5
  },
  {
    "patternId": "E0604",
    "title": "Enforce string literals in __all__",
    "description": "Enforces string literals in the module variable __all__.",
    "timeToFix": 5
  },
  {
    "patternId": "E0701",
    "title": "Enforce correct except clause order",
    "description": "Enforces that except clauses are defined from the more specific to the more generic.",
    "timeToFix": 5
  },
  {
    "patternId": "E0702",
    "title": "Enforce raise argument type",
    "description": "Enforces that when raising an error only classes, instances or string are used.",
    "timeToFix": 5
  },
  {
    "patternId": "E0710",
    "title": "Enforce raised exceptions inherit from BaseException",
    "description": "Enforces that raised new-style classes inherit from the BaseException class.",
    "timeToFix": 5
  },
  {
    "patternId": "E0711",
    "title": "Prohibit raising NotImplemented",
    "description": "Prohibits raising NotImplemented, NotImplementedError should be raised instead.",
    "timeToFix": 5
  },
  {
    "patternId": "E0712",
    "title": "Enforce caught exceptions inherit from BaseException",
    "description": "Enforces caught new-style classes inherit from the BaseException class.",
    "timeToFix": 5
  },
  {
    "patternId": "E1003",
    "title": "Enforce super() first argument",
    "description": "Enforces the super() first argument to be the type of the current class.",
    "timeToFix": 5
  },
  {
    "patternId": "E1004",
    "title": "Enforce super() arguments",
    "description": "Enforces super() to have the required number of arguments.",
    "timeToFix": 5
  },
  {
    "patternId": "E1102",
    "title": "Prohibit invocation of non-callable",
    "description": "Prohibits invocation of an object that has been inferred to a non-callable object.",
    "timeToFix": 5
  },
  {
    "patternId": "E1111",
    "title": "Prohibit assignment of void function",
    "description": "Prohibits assignment of function calls that don't return any value.",
    "timeToFix": 5
  },
  {
    "patternId": "E1120",
    "title": "Prohibit missing arguments",
    "description": "Prohibits function calls that have less arguments than those declared.",
    "timeToFix": 5
  },
  {
    "patternId": "E1121",
    "title": "Prohibit excessive arguments",
    "description": "Prohibits function calls that have more arguments than those declared.",
    "timeToFix": 5
  },
  {
    "patternId": "E1123",
    "title": "Prohibit undefined keyword arguments",
    "description": "Prohibits function calls using undefined keyword arguments.",
    "timeToFix": 5
  },
  {
    "patternId": "E1124",
    "title": "Prohibit argument as both positional and keyword",
    "description": "Prohibits function calls from being passed an argument as both positional and keyword.",
    "timeToFix": 5
  },
  {
    "patternId": "E1200",
    "title": "Prohibit unsupported logging format",
    "description": "Prohibits unsupported format characters from being used in logging operations.",
    "timeToFix": 5
  },
  {
    "patternId": "E1201",
    "title": "Prohibit partial logging format",
    "description": "Prohibits partial format string from being used on logging operations.",
    "timeToFix": 5
  },
  {
    "patternId": "E1205",
    "title": "Prohibit excessive logging format arguments",
    "description": "Prohibits logging operations that have more arguments than those declared in the format string.",
    "timeToFix": 5
  },
  {
    "patternId": "E1206",
    "title": "Prohibit missing logging format arguments",
    "description": "Prohibits logging operations that have less arguments than those declared in the format string.",
    "timeToFix": 5
  },
  {
    "patternId": "E1300",
    "title": "Prohibit unsupported string format",
    "description": "Prohibits unsupported conversion specifiers from being used in string format operations.",
    "timeToFix": 5
  },
  {
    "patternId": "E1301",
    "title": "Prohibit partial string format",
    "description": "Prohibits partial conversion specifiers from being used in string format operations.",
    "timeToFix": 5
  },
  {
    "patternId": "E1302",
    "title": "Prohibit mixed string format",
    "description": "Prohibits mixed named and unnamed conversion specifiers in string format operations.",
    "timeToFix": 5
  },
  {
    "patternId": "E1303",
    "title": "Enforce string format mapping",
    "description": "Enforces use of mapping for format string operations that use named conversion specifiers.",
    "timeToFix": 5
  },
  {
    "patternId": "E1304",
    "title": "Prohibit undefined string format mapping",
    "description": "Prohibits mapping for format string operations of having undefined conversion specifiers.",
    "timeToFix": 5
  },
  {
    "patternId": "E1305",
    "title": "Prohibit excessive string format arguments",
    "description": "Prohibits string format operations that have more arguments than conversion specifiers declared.",
    "timeToFix": 5
  },
  {
    "patternId": "E1306",
    "title": "Prohibit missing string format arguments",
    "description": "Prohibits string format operations that have less arguments than conversion specifiers declared.",
    "timeToFix": 5
  },
  {
    "patternId": "W0101",
    "title": "Prohibit unreachable code",
    "description": "Prohibits code after a return or raise statement, which will never be accessed.",
    "timeToFix": 5
  },
  {
    "patternId": "W0104",
    "title": "Prohibit useless statements",
    "description": "Prohibits statements that don't have any effect.",
    "timeToFix": 5
  },
  {
    "patternId": "W0106",
    "title": "Prohibit assignments to nothing",
    "description": "Prohibits assigning expressions to nothing.",
    "timeToFix": 5
  },
  {
    "patternId": "W0107",
    "title": "Prohibit unnecessary pass",
    "description": "Prohibits useless uses of pass expressions.",
    "timeToFix": 5
  },
  {
    "patternId": "W0108",
    "title": "Prohibit unnecessary lambda",
    "description": "Prohibits useless uses of lambda expressions.",
    "timeToFix": 5
  },
  {
    "patternId": "W0109",
    "title": "Prohibit duplicate key in dictionary",
    "description": "Prohibits definition of duplicate keys in dictionaries.",
    "timeToFix": 5
  },
  {
    "patternId": "W0110",
    "title": "Enforce list comprehensions",
    "description": "Enforce list comprehensions for map/filter on lambda.",
    "timeToFix": 5
  },
  {
    "patternId": "W0120",
    "title": "Prohibit else on loop without a break",
    "description": "Prohibits definition of else clause on loop without a break statement.",
    "timeToFix": 5
  },
  {
    "patternId": "W0122",
    "title": "Prohibit usage of exec",
    "description": "Prohibits usage of the exec statement",
    "timeToFix": 5
  },
  {
    "patternId": "W0150",
    "title": "Prohibit return in finally block",
    "description": "Prohibits statements in finally block that may swallow exception.",
    "timeToFix": 5
  },
  {
    "patternId": "W0199",
    "title": "Prohibit assert of a 2-uple",
    "description": "Prohibits calling assert on a 2-uple",
    "timeToFix": 5
  },
  {
    "patternId": "C0102",
    "title": "Prohibits names on blacklist",
    "description": "Prohibits the usage of the names in the \"bad-names\" black list.",
    "timeToFix": 15,
    "parameters": [
      {
        "name": "bad-names",
        "description": "Bad variable names which should always be refused, separated by a comma"
      }
    ]
  },
  {
    "patternId": "C0103",
    "title": "Enforces naming conventions",
    "description": "Enforces the naming convention associated to its type (constant, variable, class…).",
    "timeToFix": 15,
    "parameters": [
      {
        "name": "argument-rgx",
        "description": "Regular expression to match Argument type"
      },
      {
        "name": "attr-rgx",
        "description": "Regular expression to match Attribute type"
      },
      {
        "name": "class-rgx",
        "description": "Regular expression to match Class type"
      },
      {
        "name": "const-rgx",
        "description": "Regular expression to match Constant type"
      },
      {
        "name": "function-rgx",
        "description": "Regular expression to match Function type"
      },
      {
        "name": "method-rgx",
        "description": "Regular expression to match Method type"
      },
      {
        "name": "module-rgx",
        "description": "Regular expression to match Module type"
      },
      {
        "name": "variable-rgx",
        "description": "Regular expression to match Variable type"
      },
      {
        "name": "inlinevar-rgx",
        "description": "Regular expression to match Variable type, used as part of list comprehensions and generators"
      }
    ]
  },
  {
    "patternId": "E0001",
    "title": "Prohibits syntax errors",
    "description": "The code has syntax erros",
    "timeToFix": 5
  },
  {
    "patternId": "R0201",
    "title": "Prohibits classes without referencing",
    "description": "Prohibits the usage of classes when there are no references for it, suggesting that the method could be used as a static function instead",
    "timeToFix": 30
  },
  {
    "patternId": "R0903",
    "title": "Prohibits classes just to store data",
    "description": "Prohibits classes that only store data, the class itself should have methods to manipulate its data",
    "timeToFix": 30
  },
  {
    "patternId": "R0914",
    "title": "Prohibits more than \"max-locals\" in the namespace",
    "description": "Prohibits more than \"max-locals\" variables in a method or function.",
    "timeToFix": 40,
    "parameters": [
      {
        "name": "max-locals",
        "description": "Maximum number of locals for function / method body"
      }
    ]
  },
  {
    "patternId": "W0102",
    "title": "Prohibits dangerous default parameters",
    "description": "Prohibits the usage of a mutable value (like list or dictionary) in a default value for an argument.",
    "timeToFix": 30
  },
  {
    "patternId": "W0201",
    "title": "Prohibits instance attributes outside __init__",
    "description": "Used when an instance attribute is defined outside the __init__ method.",
    "timeToFix": 15
  },
  {
    "patternId": "W0211",
    "title": "Prohibits self or cls in static method",
    "description": "Prohibits the usage of self or cls as first argument of a static method",
    "timeToFix": 30
  },
  {
    "patternId": "W0212",
    "title": "Prohibits a protected member access outside scope",
    "description": "Prohibits a protected member is access outside the class or a descendant of the class where it's defined.",
    "timeToFix": 30
  },
  {
    "patternId": "W0221",
    "title": "Prohibits different number of arguments in override",
    "description": "Prohibits a different number of arguments than the implemented interface or in an overridden method.",
    "timeToFix": 20
  },
  {
    "patternId": "W0222",
    "title": "Prohibits different signature in override",
    "description": "Prohibits a different method signature than the implemented interface or in an overridden method.",
    "timeToFix": 20
  },
  {
    "patternId": "W0223",
    "title": "Prohibits an abstract method not overridden",
    "description": "Prohibits abstract methods (i.e. ones that raise NotImplementedError ) that is not overridden in a concrete class.",
    "timeToFix": 20
  },
  {
    "patternId": "W0231",
    "title": "Prohibits __init__ method not called",
    "description": "Prohibits an ancestor class method having __init__ method which is not called by a derived class.",
    "timeToFix": 15
  },
  {
    "patternId": "W0233",
    "title": "Prohibits calling __init__ on not direct ancestor",
    "description": "Prohibits __init__ method call on a class which is not in the direct ancestors for the analysed class.",
    "timeToFix": 30
  },
  {
    "patternId": "W0301",
    "title": "Prohibits semi-colon (\";\") ending statements",
    "description": "Prohibits a statement ended in a semi-colon (\";\"), which isn't necessary",
    "timeToFix": 5
  },
  {
    "patternId": "W0311",
    "title": "Prohibits an unexpected number of indentation's spaces",
    "description": "Prohibits an unexpected number of indentation's tabulations or spaces.",
    "timeToFix": 5
  },
  {
    "patternId": "W0312",
    "title": "Prohibits a mix of spaces and tabs",
    "description": "Prohibits the mix of tabs and spaces in a module.",
    "timeToFix": 15
  },
  {
    "patternId": "W0613",
    "title": "Prohibits not used arguments",
    "description": "Prohibits received arguments not being used, they should not be received instead",
    "timeToFix": 20
  },
  {
    "patternId": "W0702",
    "title": "Prohibits catching exceptions without type",
    "description": "Prohibits an except clause that doesn't specify exceptions type to catch",
    "timeToFix": 30
  },
  {
    "patternId": "E1128",
    "title": "Prohibits assignment to function which returns None",
    "description": "Prohibits assignment done on a function call but the inferred function returns nothing but None.",
    "timeToFix": 20
  },
  {
    "patternId": "W0705",
    "title": "Prohibits handling already caught exceptions",
    "description": "Prohibits an except clause which handles an exception that was previously caught in another except clause.",
    "timeToFix": 5
  },
  {
    "patternId": "W0711",
    "title": "Prohibits using binary operation exceptions",
    "description": "Prohibits an except clause which handles an exception that is the result of a binary operation",
    "timeToFix": 5
  },
  {
    "patternId": "W0612",
    "title": "Prohibits unused variables",
    "description": "Prohibits variables which are not used, which can be considered dead code.",
    "timeToFix": 5
  },
  {
    "patternId": "E0110",
    "title": "Prohibits instantiating abstract classes",
    "description": "Prohibits instantiating classes which have unimplemented abstract methods.",
    "timeToFix": 20
  },
  {
    "patternId": "R1703",
    "title": "Simplify if statement",
    "description": "Suggest simplification of an if statement, which can be easier to understand after refactoring.",
    "timeToFix": 5
  },
  {
    "patternId": "E0240",
    "title": "Prohibit defining classes with inconsistent MRO",
    "description": "Prohibits defining a class for which a method resolution order could not be determined.",
    "timeToFix": 20
  },
  {
    "patternId": "E0241",
    "title": "Prohibit definition of classes with duplicates bases",
    "description": "Prohibits defining a class which has more than one of the same bases at the same inheritance level.",
    "timeToFix": 20
  },
  {
    "patternId": "C0200",
    "title": "Consider using the enumerate builtin",
    "description": "Suggest a simplification of an iteration which uses range and len callables.",
    "timeToFix": 5
  },
  {
    "patternId": "E0236",
    "title": "Prohibit using non-empty strings inside __slots__",
    "description": "Prohibit using objects which shouldn't appear in __slots__ definition.",
    "timeToFix": 5
  },
  {
    "patternId": "E0238",
    "title": "Prohibit using invalid objects for defining __slots__",
    "description": "Prohibit using objects which are not suitable for defining __slots__ (only strings, iterables or sequences are permitted).",
    "timeToFix": 5
  },
  {
    "patternId": "E0603",
    "title": "Prohibit using __all__ members which can't be found",
    "description": "Prohibit using undefined variables in the __all__ variable",
    "timeToFix": 5
  },
  {
    "patternId": "W0623",
    "title": "Prohibit binding to already existing names in except clauses",
    "description": "Prohibit binding in an except clause to a name which already exists in the code.",
    "timeToFix": 5
  },
  {
    "patternId": "E0703",
    "title": "Prohibit chaining non-exceptions",
    "description": "Prohibit using the raise-from syntax with objects which aren't exceptions.",
    "timeToFix": 5
  },
  {
    "patternId": "W1301",
    "title": "Avoid having extra keys in string formatting dictionaries",
    "description": "Don't pass extra keys when doing string formatting with a dictionary.",
    "timeToFix": 5
  },
  {
    "patternId": "W1303",
    "title": "Pass all required keyword arguments to string formatting",
    "description": "Pass all defined keyword arguments into a string formatting operation.",
    "timeToFix": 5
  },
  {
    "patternId": "W1304",
    "title": "Prohibit passing unused arguments when formatting strings",
    "description": "Prohibit formatting extra arguments, which are not used by the string format.",
    "timeToFix": 5
  },
  {
    "patternId": "W1305",
    "title": "Don't combine automatic field numbering and manual field specification",
    "description": "Prohibit combining automatic field numbering ({}) with manual field specification ({i}).",
    "timeToFix": 5
  },
  {
    "patternId": "W1306",
    "title": "Prohibit missing attribute access in string formatting",
    "description": "Prohibit accessing a missing attribute in a string formatting field.",
    "timeToFix": 5
  },
  {
    "patternId": "W1307",
    "title": "Prohibit invalid indexes for string formatting",
    "description": "Don't index objects which don't support the index protocol when doing string formatting.",
    "timeToFix": 5
  },
  {
    "patternId": "E1126",
    "title": "Prohibit indexing with invalid objects",
    "description": "Always index a sequence with an integer, a slice or an instance providing an __index__ method.",
    "timeToFix": 15
  },    
  {
    "patternId": "E1132",
    "title": "Prohibit repeating keyword arguments",
    "description": "Don't call a function with a repeated keyword argument.",
    "timeToFix": 5
  },    
  {
    "patternId": "E0117",
    "title": "Prohibit defining nonlocals without a binding",
    "description": "Make sure that all nonlocals have a binding variable in the enclosing scopes.",
    "timeToFix": 5
  },
  {
    "patternId": "W0105",
    "title": "Prohibit useless string statements",
    "description": "String statements which don't form a docstring can be transformed into comments.",
    "timeToFix": 5
  },
  {
    "patternId": "C0123",
    "title": "Prohibit checking types",
    "description": "Do not check explicitly the type of an object, use isinstance or feature checking instead.",
    "timeToFix": 5
  },
  {
    "patternId": "W0401",
    "title": "Prohibit star imports",
    "description": "Do not import everything from a module using star imports.",
    "timeToFix": 5
  },
  {
    "patternId": "W0611",
    "title": "Prohibit unused imports",
    "description": "Do not leave unused imports lying around, they are dead code.",
    "timeToFix": 5
  },
  {
    "patternId": "E1125",
    "title": "Pass all required keyword arguments in function calls",
    "description": "Always pass required positional keyword arguments into function calls.",
    "timeToFix": 5
  },
  {
    "patternId": "E0113",
    "title": "Prohibit invalid starred assignment targets",
    "description": "Don't unpack multiple values using a sole starred assignment target.",
    "timeToFix": 5
  },
  {
    "patternId": "W0604",
    "title": "Prohibit using the global statement at module level",
    "description": "The global statement at module level is superfluous, since all the variables defined there are already globals.",
    "timeToFix": 5
  },
  {
    "patternId": "R0202",
    "title": "Prohibit defining classmethods by calling classmethod",
    "description": "Use the decorator syntax (@) for creating a classmethod, do not call it explicitly.",
    "timeToFix": 5
  },
  {
    "patternId": "W1300",
    "title": "Prohibit formatting non-strings when formatting with a dictionary",
    "description": "Do not pass dictionaries with non-string keys when doing old style formatting.",
    "timeToFix": 5
  },
  {
    "patternId": "E1310",
    "title": "Prohibit calling string.strip with duplicate characters",
    "description": "Stripping with multiple chars doesn't strip those chars as a string, but it removes all the occurences of each of them.",
    "timeToFix": 5
  },
  {
    "patternId": "W0404",
    "title": "Prohibit reimports",
    "description": "Don't import modules more than once.",
    "timeToFix": 5
  },
  {
    "patternId": "E0704",
    "title": "Prohibit bare raise in other places than an except clause",
    "description": "Do not place raise in other places than an except clause.",
    "timeToFix": 10
  },
  {
    "patternId": "E0112",
    "title": "Prohibit too many starred expressions",
    "description": "Do not use more than one starred variable when unpacking.",
    "timeToFix": 5
  },
  {
    "patternId": "W0601",
    "title": "Prohibit declaring globals for undefined variables",
    "description": "Do not use a global statement with a variable name that can't be found.",
    "timeToFix": 5
  },
  {
    "patternId": "W0602",
    "title": "Prohibit declaring globals without affecting them",
    "description": "Do not use global statements with variables names which are not affected in the current scope.",
    "timeToFix": 5
  },
  {
    "patternId": "E0115",
    "title": "Prohibit declaring a variable as both nonlocal and global",
    "description": "Do not declare a variable as both nonlocal and global, only one can be picked.",
    "timeToFix": 5
  },
  {
    "patternId": "E0114",
    "title": "Prohibit using starred expressions outside of assignments",
    "description": "Do not use a starred variable expression in other places than an assignment.",
    "timeToFix": 5
  },
  {
    "patternId": "E0301",
    "title": "Prohibit returning non-iterator from __iter__",
    "description": "__iter__ should always return an iterator, otherwise an error will occur.",
    "timeToFix": 15
  },
  {
    "patternId": "E0116",
    "title": "Prohibit using continue in finally",
    "description": "Using continue in a finally statement is a SyntaxError.",
    "timeToFix": 10
  },
  {
    "patternId": "W0410",
    "title": "Prohibit using __future__ imports in invalid places",
    "description": "__future__ imports need to be the first non docstring statement in a module in order to work.",
    "timeToFix": 5
  },
  {
    "patternId": "W0124",
    "title": "Prohibit declaring confusing with statement",
    "description": "Do not use context managers which returns multiple values and uses name binding with `as` only for a part of those values.",
    "timeToFix": 10
  },
  {
    "patternId": "E1127",
    "title": "Prohibit using invalid slice indexes",
    "description": "A slice index for builtin containers needs to be an integer, None or an instance with __index__ method.",
    "timeToFix": 5
  },
  {
    "patternId": "R0203",
    "title": "Prohibit declaring a static method without decorator syntax",
    "description": "A static method can easily be written by using the decorator syntax, which is cleaner and more obvious than calling static method directly.",
    "timeToFix": 5
  },
  {
    "patternId": "W1302",
    "title": "Prohibit invalid format strings",
    "description": "Make sure that the format strings are syntactically correct.",
    "timeToFix": 5
  },
  {
    "patternId": "W0622",
    "title": "Prohibit redefining builtins",
    "description": "Do not define objects with the same name as a builtin, this will trip those reading the code and it will be harder to understand.",
    "timeToFix": 5
  },
  {
    "patternId": "W1501",
    "title": "Prohibit invalid mode for open builtin",
    "description": "Make sure that the open builtin receives a correct mode.",
    "timeToFix": 5
  },
  {
    "patternId": "E0239",
    "title": "Prohibit inheriting non classes",
    "description": "Do not inherit from something which is not a class.",
    "timeToFix": 5
  },
  {
    "patternId": "W0125",
    "title": "Prohibit a conditional statement with a constant value",
    "description": "Prohibits when a conditional statement (If or ternary if) uses a constant value for its test.",
    "timeToFix": 5
  }
]
